{"version":3,"sources":["components/Wrapper.js","components/Input/Input.presenter.js","components/Input/InputSkin.js","components/Input/index.js","components/TodoBin.js","components/TodoItem.js","components/Container.js","utils/theme.config.js","components/ToggleButton.js","useTodos.js","utils/randomIds.js","serviceWorker.js","index.js","App.js"],"names":["Wrapper","styled","main","_templateObject","props","theme","bg","contrast","defaultProps","InputPresenter","input","Input_presenter_templateObject","InputSkin","div","InputSkin_templateObject","active","secondary","secondaryFade1","secondaryFade2","Input","_ref","handleUpdate","_useState","useState","_useState2","Object","slicedToArray","value","setValue","_useState3","_useState4","setActive","react_default","a","createElement","Input_InputSkin","Input_presenter","onChange","e","target","onKeyPress","_ref2","key","onFocus","onBlur","placeholder","Container","TodoBin_templateObject","TodoBin","id","children","react_beautiful_dnd_esm","droppableId","provided","assign","ref","innerRef","dropabbleProps","defaultTheme","fontColor","TodoItem_templateObject","CompleteIcon","_templateObject2","completed","DeleteIcon","_templateObject3","TodoItem","todo","index","handleRemove","handleToggle","draggableId","TodoItem_Container","draggableProps","dragHandleProps","complete","onClick","content","Container_templateObject","primary","tertiary","lightTheme","ToggleButton","ToggleButton_templateObject","todoReducer","state","action","type","randomLetter","String","fromCharCode","Math","floor","random","concat","Date","now","randomId","order","toConsumableArray","todos","objectSpread","defineProperty","Array","from","filter","v","result","destination","source","newOrder","splice","useTodos","initialState","_useReducer","useReducer","_useReducer2","dispatch","handleAdd","handleDragEnd","Boolean","window","location","hostname","match","ReactDOM","render","_useTodos","toggler","importedTheme","setTheme","todoList","map","todoID","i","components_TodoItem","styled_components_browser_esm","components_Wrapper","components_Container","components_ToggleButton","onDragEnd","components_TodoBin","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3dd78047.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Wrapper = styled.main`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  background: ${props => props.theme.bg};\n  height: 100vh;\n  * {\n    color: ${props => props.theme.contrast};\n  }\n`\n\nWrapper.defaultProps = {\n  theme: {\n    bg: \"white\",\n    contrast: \"black\"\n  }\n}\n\nexport default Wrapper;","import styled from 'styled-components';\n\nconst InputPresenter = styled.input`\n  width: calc(100% - 16px);\n  height: 56px;\n  position: relative;\n  padding: 0px 0 0 16px;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: normal;\n  background-color: transparent;\n  color: white;\n  outline: none;\n  -webkit-appearance: none;\n  &::-webkit-input-placeholder{\n    color: white;\n  }\n`\n\nexport default InputPresenter;","import styled from 'styled-components';\n\nconst InputSkin = styled.div`\n  width: 100%;\n  height: 56px;\n  border-radius: 4px;\n  position: relative;\n  background-color: ${props => props.active ? props.theme.secondary : props.theme.secondaryFade1};\n  margin: 10px 0;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: ${props => props.active ? null: props.theme.secondaryFade2};\n  }\n`;\n\nexport default InputSkin;","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport InputPresenter from \"./Input.presenter\";\nimport InputSkin from \"./InputSkin\";\n\nexport default function Input({ handleUpdate }) {\n  const [value, setValue] = useState(\"\");\n  const [active, setActive] = useState(\"\");\n\n  /**\n   * Sends the value to the parent component to handle the update\n   * and resets the value of the input.\n   */\n  const handleKeyPress = ({ key }) => {\n    if (key === \"Enter\") {\n      handleUpdate(value);\n      setValue(\"\");\n    }\n  };\n\n  return (\n    <InputSkin active={active}>\n      <InputPresenter\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        onKeyPress={handleKeyPress}\n        onFocus={() => setActive(true)}\n        onBlur={() => setActive(false)}\n        placeholder=\"I plan to...\"\n      />\n    </InputSkin>\n  );\n}\n\nInput.propTypes = {\n  handleUpdate: PropTypes.func\n};\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Droppable} from 'react-beautiful-dnd'\nimport styled from 'styled-components'\n\n\nconst Container = styled.div`\n  display: inline-block;\n  padding: 12px;\n  border: 1px solid lightgray;\n  border-radius: 4px;\n  height: 50vh;\n  overflow-y: scroll;\n`\n\nconst TodoBin = ({id, children}) => (\n    <Droppable droppableId={id} >\n      {provided => (\n        <Container\n          ref={provided.innerRef}\n          {...provided.dropabbleProps}\n        >\n          {children}\n          {provided.placeholder}\n        </Container>\n      )}\n    </Droppable>\n)\n\nTodoBin.propTypes = {\n  id: PropTypes.string.isRequired\n}\n\nexport default TodoBin;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nconst defaultTheme = {\n  theme: {\n    contrast: \"white\",\n    fontColor: \"black\"\n  }\n};\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 5fr 5fr 100fr;\n  grid-gap: 2px;\n  align-items: center;\n  justify-items: flex-start;\n  margin: 10px 0;\n  padding: 10px 10px;\n  background: ${props => props.theme.contrast};\n  color: ${props => props.theme.fontColor};\n  width: calc(100% - 12px);\n  overflow: hidden;\n  box-shadow: 0px 6px 8px rgba(164, 164, 164, 0.213825);\n  border-radius: 3px;\n  & div {\n    color: ${props => props.theme.fontColor};\n  }\n`;\n\nconst CompleteIcon = styled.div`\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  border: 1px solid ${props => props.theme.fontColor};\n  background: ${props =>\n    props.completed ? props.theme.fontColor : \"transparent\"};\n  padding: none;\n  margin: none;\n  cursor: pointer;\n  transition: all 1s cubic-bezier(0.23, 1, 0.32, 1);\n  &:hover {\n    background: rgba(0, 0, 0, 0.6);\n  }\n\n  &:active {\n    background: black;\n  }\n`;\n\nconst DeleteIcon = styled.div`\n  width: 20px;\n  height: 8px;\n  border: 1px solid black;\n  border-radius: 4px;\n  background: black;\n  padding: none;\n  cursor: pointer;\n  transition: all 1s cubic-bezier(0.23, 1, 0.32, 1);\n  &:hover {\n    background: rgba(0, 0, 0, 0.6);\n  }\n  &:active {\n    background: transparent;\n  }\n`;\n\nContainer.defaultProps = { defaultTheme };\nCompleteIcon.defaultProps = { defaultTheme };\n\nconst TodoItem = ({ todo, index, handleRemove, handleToggle }) => (\n  <Draggable draggableId={todo.id} index={index}>\n    {provided => (\n      <Container\n        {...provided.draggableProps}\n        {...provided.dragHandleProps}\n        ref={provided.innerRef}\n      >\n        <CompleteIcon\n          completed={todo.complete}\n          onClick={() => handleToggle(todo.id, !todo.complete)}\n        />\n        <DeleteIcon onClick={() => handleRemove(todo.id)} />\n        <div>{todo.content}</div>\n      </Container>\n    )}\n  </Draggable>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.string,\n    content: PropTypes.string\n  }),\n  index: PropTypes.number\n};\n\nexport default TodoItem;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  @media only screen and (min-width: 1224px){\n    width: 50vw;\n  }\n  @media only screen and (min-width: 320px) and (max-width: 768px){\n    width: 95vw;\n  }\n`;\n\nexport default Container;","export const theme = {\n  primary: \"#1F63E6\",\n  secondary: \"#E75671\",\n  secondaryFade1: \"rgba(231,86,113, 0.3)\",\n  secondaryFade2: \"rgba(231,86,113, 0.5)\",\n  tertiary: \"#454445\",\n  bg: \"#181618\",\n  contrast: \"#FFFFFF\",\n  fontColor: \"#454445\"\n}\n\nexport const lightTheme = {\n  primary: \"#E75671\",\n  secondary: \"#1F63E6\",\n  secondaryFade1: \"rgba(31,99,230, 0.3)\",\n  secondaryFade2: \"rgba(31,99,230, 0.5)\",\n  tertiary: \"#454445\",\n  bg: \"#FFFFFF\",\n  contrast: \"#181618\",\n  fontColor: \"#FFFFFF\"\n}","import styled from 'styled-components';\n\nconst ToggleButton = styled.div`\n  position: relative;\n  margin: 10px 0;\n  width: 40px;\n  height: 18px;\n  background: ${props => props.theme.contrast};\n  border-radius: 10px;\n  border: 1px solid transparent;\n  cursor: pointer;\n  transition: all 0.4s;\n  &::before{\n    position: absolute;\n    content: \"\";\n    width: 22px;\n    height: 22px;\n    border-radius: 50%;\n    background: ${({theme}) => theme.primary};\n    top: -2px;\n    left: ${({active}) => active ? \"22px\" : \"-2px\"};\n    transition: all .4s;\n  } \n`\n\nexport default ToggleButton;","import { useReducer } from \"react\";\nimport { randomId } from \"./utils/randomIds\";\n\nconst todoReducer = (state, action) => {\n  switch (action.type) {\n    case \"TODO_ADD\": {\n      const id = randomId();\n      const { content } = action;\n      const order = [id, ...state.order];\n      return {\n        todos: { ...state.todos, [id]: { id, content, complete: false } },\n        order\n      };\n    }\n    case \"TODO_REMOVE\": {\n      // Implementation to follow\n      let todos = Object.assign({}, state.todos);\n      delete todos[action.id];\n      let order = Array.from(state.order);\n      order = order.filter(v => v !== action.id);\n      return { todos, order };\n    }\n    case \"TODO_TOGGLE\": {\n      const todo = Object.assign({}, state.todos[action.id]);\n      todo.complete = action.value;\n      return { ...state, todos: { ...state.todos, [action.id]: todo } };\n    }\n    case \"DRAG_TODO\": {\n      const { result } = action;\n      const { draggableId, destination, source } = result;\n      // when user drags but places at the same location or doesn't move it at all\n      if (!destination || destination.index === source.index) return state;\n      let newOrder = Array.from(state.order);\n      newOrder.splice(source.index, 1); // remove one item to the right\n      newOrder.splice(destination.index, 0, draggableId); // add one item\n      return { ...state, order: newOrder };\n    }\n    default:\n      return state;\n  }\n};\n\nconst useTodos = initialState => {\n  const [state, dispatch] = useReducer(todoReducer, {\n    todos: initialState,\n    order: []\n  });\n\n  const handleAdd = content => {\n    dispatch({\n      type: \"TODO_ADD\",\n      content\n    });\n  };\n\n  // Function for react beautiful dnd when user drops an item\n  const handleDragEnd = result => {\n    dispatch({\n      type: \"DRAG_TODO\",\n      result\n    });\n  };\n\n  const handleRemove = id => {\n    dispatch({\n      type: \"TODO_REMOVE\",\n      id\n    });\n  };\n\n  const handleToggle = (id, value) => {\n    dispatch({\n      type: \"TODO_TOGGLE\",\n      id,\n      value\n    });\n  };\n\n  return { ...state, handleAdd, handleDragEnd, handleRemove, handleToggle };\n};\n\nexport default useTodos;\n","/**\n * Generates a random ID based on a random character and the current time\n */\nexport const randomId = () => {\n  let randomLetter = String.fromCharCode(65 + Math.floor(Math.random() * 26));\n  return `${randomLetter}-${Date.now()}`;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState } from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport Input from \"./components/Input/\";\nimport TodoBin from \"./components/TodoBin\";\nimport TodoItem from \"./components/TodoItem\";\nimport Container from \"./components/Container\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme as importedTheme, lightTheme } from \"./utils/theme.config\";\nimport ToggleButton from \"./components/ToggleButton\";\nimport useTodos from \"./useTodos\";\n\nexport default function App() {\n  const {\n    todos,\n    order,\n    handleAdd,\n    handleDragEnd,\n    handleRemove,\n    handleToggle: toggler\n  } = useTodos({});\n  const [theme, setTheme] = useState(importedTheme);\n\n  const handleToggle = e => {\n    if (theme === lightTheme) {\n      setTheme(importedTheme);\n    } else {\n      setTheme(lightTheme);\n    }\n  };\n\n  const todoList = order.map((todoID, i) => (\n    <TodoItem\n      todo={todos[todoID]}\n      index={i}\n      key={todoID}\n      handleRemove={handleRemove}\n      handleToggle={toggler}\n    />\n  ));\n  \n  return (\n    <ThemeProvider theme={theme}>\n      <Wrapper>\n        <Container>\n          <p>\n            Change the theme!{\" \"}\n            <ToggleButton\n              active={theme === lightTheme}\n              onClick={handleToggle}\n            />\n          </p>\n          <h1>What are your plans for today?</h1>\n          <Input handleUpdate={handleAdd} />\n          <DragDropContext onDragEnd={handleDragEnd}>\n            <TodoBin id=\"todos-1\">{todoList}</TodoBin>\n          </DragDropContext>\n        </Container>\n      </Wrapper>\n    </ThemeProvider>\n  );\n}\n"],"sourceRoot":""}